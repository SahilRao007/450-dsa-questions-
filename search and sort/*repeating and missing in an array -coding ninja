@this method uses no space hence most effective 
both method has o(n)

vector<int> findRepeatingAndMissingNumbers(vector<int> arr)
{
    int miss=-1;
    int rep=-1;
    vector<int>ans;
    //for repeating 
    for(int i=0;i<arr.size();i++)
    {
        if(arr[abs(arr[i])-1]>0)
            arr[abs(arr[i])-1]=-arr[abs(arr[i])-1];
        else
            rep=abs(arr[i]);
    }
    //for missing 
    for(int i=0;i<arr.size();i++)
    {
        if(arr[i]>0)
            miss=i+1;
    }
    ans.insert(ans.end(),{rep,miss});
    return ans;
}

@2nd method space is o(n)

vector<int> findRepeatingAndMissingNumbers(vector<int> nums)
{
    int n=nums.size(); //0 to n numbers 
    vector<int>sp(n,0);
    for(int i=0;i<n;i++)
    {
        sp[nums[i]-1]++;
    }
    int rep=-1;
    int miss=-1;
    for(int i=0;i<n;i++)
    {
        if(sp[i]>1)
            rep=i+1;
        if(sp[i]==0)
            miss=i+1;
    }
    vector<int>ans;
    ans.insert(ans.end(),{rep,miss});
    return ans;
}
