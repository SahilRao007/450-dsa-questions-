do this question in coding ninja also 
@1st method best ->0(n) || 0(1) (ignoring the ans vector)

class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        vector<long long int> ans(n);
        long long int csum=1;
        for(int i=0;i<n;i++)
        {
            csum*=nums[i];
            ans[i]=csum;
        }
        long long int prod=1;
        for(int i=n-1;i>0;i--)
        {
            
            ans[i]=ans[i-1]*prod;
            prod*=nums[i];
        }
        ans[0]=prod;
        return ans;
    }
};

@2nd method -> 0(n) || 0(1) 

class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        vector<long long int>left(n);
        vector<long long int>right(n);
        long long int prod=1;
        for(int i=0;i<n;i++)
        {
            if(i==0)left[i]=1;
            else
            left[i]=prod;
            prod*=nums[i];
            
        }
        prod=1;
        for(int i=n-1;i>=0;i--)
        {
            if(i==n-1)right[i]=1;
            else
            right[i]=prod;
            prod*=nums[i];
        }
        vector<long long int> ans(n);
        for(int i=0;i<n;i++)
        {
            ans[i]=left[i]*right[i];
        }
        return ans;
    }
};
