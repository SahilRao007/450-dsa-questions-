@boyer moore majority voting algorithm  (watch take u forward video on this and gfg article for better understanding 

#include <bits/stdc++.h> 
int findMajorityElement(int arr[], int n) {
	int ct=0;
    int candidate=0;
    for(int i=0;i<n;i++)
    {
        if(ct==0)
            candidate=arr[i];
        
        if(arr[i]==candidate)
            ct+=1;
        else
            ct-=1;
    }
    ct=0;
    for(int i=0;i<n;i++)
    {
        if(arr[i]==candidate)
            ct++;
    }
    if(ct>n/2)
        return candidate;
    else
        return -1;
}

@2nd method involve the use of unordered_map so o(n) || o(n)
@3rd method will be sorted method o(nlogn) || o(1)

#include <bits/stdc++.h> 
int findMajorityElement(int arr[], int n) {
	sort(arr,arr+n);
    int ct=1;
    int floor=n/2;
    for(int i=1;i<=n;i++)  //@here we have used equal rather than < in n becoz we are searching for arr[n-1] arrays 
    {
        if(arr[i]==arr[i-1])
            ct++;
        else
        {
            if(ct>floor)
                return arr[i-1];
            ct=1;
        }
    }
    return -1;
}
