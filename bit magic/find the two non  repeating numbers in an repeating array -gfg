class Solution
{
public:
    vector<int> singleNumber(vector<int> nums) 
    {
      vector<int>ans(2);
      int xorr=nums[0];
      int n=nums.size();
      for(int i=1;i<n;i++)
      {
          xorr=xorr xor nums[i];
      }
      //2 unique numbers xor is stored 
      int temp_xor=xorr;
      //calculating the right set bit
      int pos=0;
      while(temp_xor>0)
      {
          if(temp_xor & 1)
            break;
            pos++;
            temp_xor>>=1;
      }
      
      int new_xor=0;
      for(int i=0;i<n;i++)
      {
        if(nums[i] & (1<<pos) )
            new_xor=new_xor ^ nums[i];
      }
      int b=xorr xor new_xor;
      int a=xorr xor b;
      if(a<b)
      {ans[0]=a;ans[1]=b;}
      else
      {ans[0]=b;ans[1]=a;}
      return ans;
      
      
    }
};
