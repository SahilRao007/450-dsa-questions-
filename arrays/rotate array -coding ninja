#include <bits/stdc++.h> 
#include <iostream>
using namespace std;

int main() {
   int n;
    cin>>n;
    vector<int>arr(n);
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    int k;
    cin>>k;
    reverse(arr.begin(),arr.end());
    reverse(arr.begin()+(n-k),arr.end());
    reverse(arr.begin(),arr.begin()+(n-k));
    for(auto i:arr)
    {
        cout<<i<<" ";
    }

    return 0;
}
T.C->O(n)
if we use our defined function reverse i.e used n/2 times then code can be O(n/2)

@2nd mehtod traditional method a little slow (but reversing the array using traditional mehtod is there ) 
#include <bits/stdc++.h> 
#include <iostream>
using namespace std;
void rev(vector<int>& arr,int l,int h)
{
    while(l<h)
    {
        swap(arr[l],arr[h]);
        l++;
        h--;
    }
}
int main() {
    int n;
    cin>>n;
    vector<int> arr(n);
    for(int i=0;i<n;i++)
    { cin>>arr[i];}
    int k;
    cin>>k;
    rev(arr,0,n-1);
    rev(arr,n-k,n-1);
    rev(arr,0,n-k-1);
    for(int i=0;i<n;i++)
        cout<<arr[i]<<" ";
        
    return 0;
}
